package miner

import (
	"log"
	"testing"

	"github.com/davecgh/go-spew/spew"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/crypto"
)

/*
00000000000000000000000000000000
00000000000000000000000000000001
2d4c49471172aa8f4c5a0b3d495145b1
e78105d2b42fbfb56423359c5acd4ae5
dcc555576498e638decbe15f8c61c73f
1a76a3d909d7b6c180aa107766540019
4cc6f52950c1a8840000000000000000
00000000000000000000000000000000
00000000000000070000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
0000000000000000
010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080
*/
func TestKeccak(t *testing.T) {
	input := common.Hex2Bytes("00000000000000000000000000000000000000000000000000000000000000012d4c49471172aa8f4c5a0b3d495145b1e78105d2b42fbfb56423359c5acd4ae5dcc555576498e638decbe15f8c61c73f1a76a3d909d7b6c180aa1077665400194cc6f52950c1a884000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001")

	hash := crypto.Keccak256Hash(input)

	preCalc := input[:136]
	remain := input[136:200]

	d := crypto.NewKeccakState()
	d.Write(preCalc)

	midstate := GetMidState(d)

	spew.Dump(midstate)

	d.Write(remain)
	result := make([]byte, 32)
	d.Read(result)

	log.Printf("Hash: %s, result: %02x", hash.Hex(), result)
}
